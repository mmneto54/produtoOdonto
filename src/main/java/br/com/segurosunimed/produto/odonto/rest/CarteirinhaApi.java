/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.8).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package br.com.segurosunimed.produto.odonto.rest;

import br.com.segurosunimed.produto.odonto.model.ConsultarCarteirinhaType;
import br.com.segurosunimed.produto.odonto.model.PesquisarCarteirinhaType;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.servlet.http.HttpServletRequest;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2021-10-27T12:21:56.306-03:00[America/Sao_Paulo]")
@Api(value = "carteirinha", description = "the carteirinha API")
public interface CarteirinhaApi {

    Logger log = LoggerFactory.getLogger(CarteirinhaApi.class);

    default Optional<ObjectMapper> getObjectMapper() {
        return Optional.empty();
    }

    default Optional<HttpServletRequest> getRequest() {
        return Optional.empty();
    }

    default Optional<String> getAcceptHeader() {
        return getRequest().map(r -> r.getHeader("Accept"));
    }

    @ApiOperation(value = "Pesquisar carteirinha de um cliente", nickname = "carteirinhaclientecpf", notes = "", response = PesquisarCarteirinhaType.class, authorizations = {
        @Authorization(value = "clientIdHeader")    }, tags={ "produto", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Operação com sucesso", response = PesquisarCarteirinhaType.class),
        @ApiResponse(code = 400, message = "Informações inválidas") })
    @RequestMapping(value = "/carteirinha/cliente/{cpf}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
     CompletableFuture<ResponseEntity<PesquisarCarteirinhaType>> carteirinhaclientecpf(@ApiParam(value = "CPF do Segurado",required=true) @PathVariable("cpf") String cpf,@ApiParam(value = "JWT" ,required=true) @RequestHeader(value="Token-Unimed", required=true) String tokenUnimed);


    @ApiOperation(value = "Consultar detalhes de uma carteirinha", nickname = "carteirinhanumerocpfcpf", notes = "", response = ConsultarCarteirinhaType.class, authorizations = {
        @Authorization(value = "clientIdHeader")    }, tags={ "produto", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "", response = ConsultarCarteirinhaType.class),
        @ApiResponse(code = 400, message = "Informações inválidas") })
    @RequestMapping(value = "/carteirinha/{numero}/cpf/{cpf}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
     CompletableFuture<ResponseEntity<ConsultarCarteirinhaType>> carteirinhanumerocpfcpf(@ApiParam(value = "Número da Carteirinha",required=true) @PathVariable("numero") String numero,@ApiParam(value = "CPF do Segurado",required=true) @PathVariable("cpf") String cpf,@ApiParam(value = "JWT" ,required=true) @RequestHeader(value="Token-Unimed", required=true) String tokenUnimed);

}
